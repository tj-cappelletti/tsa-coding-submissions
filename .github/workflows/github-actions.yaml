name: build-application-workflow

# Build on every push (regardless of branch)
# Build on PR to ensure the merge is good
# Allow manual builds
on: [push, pull_request, workflow_dispatch]

env:
  DOCKER_REPO: webstorm.azurecr.io

jobs:
  semver:
    name: "Generate SemVer"
    runs-on: ubuntu-latest
    outputs:
      major: ${{ steps.gitversion.outputs.major }}
      minor: ${{ steps.gitversion.outputs.minor }}
      patch: ${{ steps.gitversion.outputs.patch }}
      majorMinor: ${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}
      semVer: ${{ steps.gitversion.outputs.semver }}
      shorSha: ${{ steps.gitversion.outputs.shortSha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
        
      - name: GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
    
  buildApplciations:
    name: "Build .NET Applciations"
    needs: semver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Restore Web API Project
        run: dotnet restore ./src/Tsa.CodingChallenge.Submissions.WebApi/Tsa.CodingChallenge.Submissions.WebApi.csproj

      - name: Restore Blazor Project
        run: dotnet restore ./src/Tsa.CodingChallenge.Submissions.Blazor/Tsa.CodingChallenge.Submissions.Blazor.csproj

      - name: Restore Unit Tests Project
        run: dotnet restore ./src/Tsa.CodingChallenge.Submissions.UnitTests/Tsa.CodingChallenge.Submissions.UnitTests.csproj

      - name: Build Web API Project
        run: dotnet build ./src/Tsa.CodingChallenge.Submissions.WebApi/Tsa.CodingChallenge.Submissions.WebApi.csproj --configuration Release --no-restore --nologo

      - name: Build Blazor Project
        run: dotnet build ./src/Tsa.CodingChallenge.Submissions.Blazor/Tsa.CodingChallenge.Submissions.Blazor.csproj --configuration Release --no-restore --nologo
        
      - name: Run Unit Tests
        run: dotnet test ./src/Tsa.CodingChallenge.Submissions.UnitTests/Tsa.CodingChallenge.Submissions.UnitTests.csproj --no-restore --verbosity normal --filter "TestCategory=UnitTest" --nologo

      - name: Publish Blazor App
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          dotnet publish ./src/Tsa.CodingChallenge.Submissions.Blazor/Tsa.CodingChallenge.Submissions.Blazor.csproj \
            --configuration Release \
            --no-build \
            --output ${{ runner.temp }}/Tsa.CodingChallenge.Submissions.Blazor \
            --nologo

      - name: Publish Web AIP
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          dotnet publish ./src/Tsa.CodingChallenge.Submissions.WebApi/Tsa.CodingChallenge.Submissions.WebApi.csproj \
            --configuration Release \
            --no-build \
            --output ${{ runner.temp }}/Tsa.CodingChallenge.Submissions.WebApi \
            --nologo

      - uses: actions/upload-artifact@v2
        name: Upload Published Blazor Web App
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          name: web-api
          path: ${{ runner.temp }}/Tsa.CodingChallenge.Submissions.Blazor
        
      - uses: actions/upload-artifact@v2
        name: Upload Published Web API App
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          name: web-api
          path: ${{ runner.temp }}/Tsa.CodingChallenge.Submissions.WebApi

  buildDatabase:
    name: "Build Database DACPAC"
    needs: semver
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build Database DACPAC
        run: |
          msbuild src\Tsa.CodingChallenge.Submissions.Database\Tsa.CodingChallenge.Submissions.Database.sqlproj `
            /t:Build `
            /p:configuration=release `
            /p:SolutionDir=${{ github.workspace }}\src\
      
      # This needs to run in the build step to ensure we've captured
      # the Dockerfile and the creation script as this can't run on
      # a Linux VM - Microsoft needs to make MSBuild work on Linux
      - uses: actions/upload-artifact@v2
        name: Upload Docker Artifacts
        # DEBUG ONLY - Commented out condition to test workflow
        #if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          name: database-docker
          path: src/docker/database

      - uses: actions/upload-artifact@v2
        name: Upload DACPAC Artifact
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          name: database-dacpac
          path: src/*.Database/**/*.dacpac

  # TODO: Only run on master branch  
  continuousIntegration:
    name: Deploy to Integration Environment
    needs: [semver, buildApplciations, buildDatabase]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: database-docker
          path: database-docker/
          
      - name: Set Execute on Scripts
        run: chmod a+x ./database-docker/scripts/create-sql-database.sh

      - name: Build tsa/coding/submissions/blazor Image
        run: |
          cd ${{ github.workspace }}/src
          echo "Building Blazor Container"
          docker build \
            --tag $DOCKER_REPO/tsa/coding/submissions/blazor:${{ needs.semver.outputs.semVer }} \
            --tag $DOCKER_REPO/tsa/coding/submissions/blazor:${{ needs.semver.outputs.majorMinor }} \
            --tag $DOCKER_REPO/tsa/coding/submissions/blazor:${{ needs.semver.outputs.major }} \
            --file Tsa.CodingChallenge.Submissions.Blazor/Dockerfile \
            .

      - name: Build tsa/coding/submissions/database Image
        run: |
          cd ${{ github.workspace }}/database-docker
          echo "Building Database Container"
          docker build \
            --tag $DOCKER_REPO/tsa/coding/submissions/database:${{ needs.semver.outputs.semVer }} \
            --tag $DOCKER_REPO/tsa/coding/submissions/database:${{ needs.semver.outputs.majorMinor }} \
            --tag $DOCKER_REPO/tsa/coding/submissions/database:${{ needs.semver.outputs.major }} \
            .

      - name: Build tsa/coding/submissions/webapi Image
        run: |
          cd ${{ github.workspace }}/src
          echo "Building Web API Container"
          docker build \
            --tag $DOCKER_REPO/tsa/coding/submissions/webapi:${{ needs.semver.outputs.semVer }} \
            --tag $DOCKER_REPO/tsa/coding/submissions/webapi:${{ needs.semver.outputs.majorMinor }} \
            --tag $DOCKER_REPO/tsa/coding/submissions/webapi:${{ needs.semver.outputs.major }} \
            --file Tsa.CodingChallenge.Submissions.WebApi/Dockerfile \
            .

      - name: DEBUG ONLY - Docker Images
        run: docker images
